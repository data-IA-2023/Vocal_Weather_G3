import streamlit as st
import re
import requests
import dateparser
import os
import spacy

# Download and load spaCy English language model
nlp = spacy.load("en_core_web_sm")

def extract_entities(text):
    # Process the input text using spaCy
    doc = nlp(text)
    city = None
    date = None
    
    # Iterate through named entities recognized by spaCy
    for entity in doc.ents:
        if entity.label_ == 'GPE':  # Geo-Political Entity (City, Country, etc.)
            city = entity.text
        elif entity.label_ == 'DATE':  # Date entity
            date_str = entity.text
            parsed_date = dateparser.parse(date_str)
            if parsed_date:
                date = parsed_date.strftime("%Y-%m-%d")

    return city, date

def get_weather_forecast(city, date):
    api_key = "a9769335750f4ac2c0fac2377547d1cd"
    url = f'https://api.openweathermap.org/data/2.5/weather?q={city}&appid={api_key}'

    response = requests.get(url)
    
    # Checking the API response
    if response.status_code == 200:
        weather_data = response.json()
        return weather_data
    else:
        return {"error": "Failed to obtain weather data"}

def main():
    st.title("Weather Forecast App")
    text_input = st.text_input("Enter your query:")
    if st.button("Get Weather Forecast"):
        city, date = extract_entities(text_input)
        if city and date:
            weather_info = get_weather_forecast(city, date)
            if "error" in weather_info:
                st.error(weather_info["error"])
            else:
                st.success("Weather information:")
                st.write(weather_info)
        else:
            st.warning("Unable to detect city or date in the text.")

# Example usage
if __name__ == "__main__":
    main()
